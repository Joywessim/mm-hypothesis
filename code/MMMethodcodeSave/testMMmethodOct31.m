function [ MMbyidimstats, Runstats, MMsummary,MM,uidim ] = testMMmethodOct31( testcaseid )
%UNTITLED3 Summary of this function goes here
%   Detailed explanation goes here
if testcaseid == 1
    load('test1.mat','sample','idim');
    %NOTE: the above sample was generated from August15 code for 
    %ExampleUpdated using the parameters below. 
    % rgparam = 5; sampleparam = 800
    %[ sample,spheresample,linesample,samplesize ] = ExampleUpdated( sampleparam,rgparam);
    %The idim values were generated by the August 15 code for variancebaseidim

    data = sample;
    SVDbound = 3000;maxscale = 3;K = 3; varthresh = .95; eps = 10^(-14);
    testproportion = .4; runs = 20;seed = 5; confidencebound = .95;
    figs = 0; fname = 'tcid1';
    [MMbyidimstats, MMsummary,MM,uidim,Runstats ] = MMMethod(data,idim,testproportion,runs, seed,eps,SVDbound,maxscale,K,varthresh,confidencebound, figs,fname );
elseif testcaseid == 2
    dirname = '/Users/lindaness/Documents/MATLAB/wisdmreproducibility/results/';
    load([dirname,'test9-results.mat'],'data','idim');
    SVDbound = 400;maxscale = 3;K = 3; varthresh = .95; eps = 10^(-14);
    testproportion = .4; runs = 1;seed = 5; confidencebound = .95;
    figs = 0; fname = [dirname,'MMmethodtest2'];
    %[ MMsummary,MM,u ] = MultiManifold2(data,idim,SVDbound,maxscale,K, varthresh,eps)
    [MMbyidimstats, MMsummary,MM,uidim,Runstats ] = MMMethod2(data,idim,testproportion,runs, seed,eps,SVDbound,maxscale,K,varthresh,confidencebound, figs,fname );
elseif testcaseid == 3
    dirname = '/Users/lindaness/Documents/MATLAB/wisdmreproducibility/results/';
    load([dirname,'test9-results.mat'],'data','idim');
    u = unique(idim);
    %find the subset of u of positive dimensions
    %idim == -1 if the neighborhoods were  too sparse (< cutoff # of points)
    SVDbound = 400;maxscale = 3;K = 3; varthresh = .95; eps = 10^(-14);
    testproportion = .4; runs = 20;seed = 5; confidencebound = .95;
    figs = 0; fname = [dirname,sprintf('MMmethodtest%d',testcaseid)];
    %[ MMsummary,MM,u ] = MultiManifold2(data,idim,SVDbound,maxscale,K, varthresh,eps)
    [MMbyidimstats, MMsummary,MM,uidim,Runstats ] = MMMethod2(data,idim,testproportion,runs, seed,eps,SVDbound,maxscale,K,varthresh,confidencebound, figs,fname ); 
elseif testcaseid == 4
    dirname = '/Users/lindaness/Documents/MATLAB/wisdmreproducibility/results/';
    load([dirname,'test9-results.mat'],'data','idim');
    %only compute the Multi-Manifold for the points where idim > 0
    indpos = find(idim > 0);
    idim2 = idim(indpos,:);
    data2 = data(indpos,:);
    percentagenoidim = length(find(idim <= 0))/length(idim)
    SVDbound = 400;maxscale = 3;K = 3; varthresh = .95; eps = 10^(-14);
    testproportion = .4; runs = 20;seed = 5; confidencebound = .95;
    figs = 0; fname = [dirname,sprintf('MMmethodtest%d',testcaseid)]
    [MMbyidimstats, MMsummary,MM,uidim,Runstats ] = MMMethod(data2,idim2,testproportion,runs, seed,eps,SVDbound,maxscale,K,varthresh,confidencebound, figs,fname );
elseif testcaseid == 10;
    %run this in the directory '/Users/lindaness/Documents/MATLAB/wisdmreproducibility/code/MMMethodcode'
    dirname = '/Users/lindaness/Documents/MATLAB/wisdmreproducibility/results/';
    fname1 = [dirname,sprintf('test%d-vidim-',testcaseid)];
    fname2 = [dirname,sprintf('test%d-MM-',testcaseid)];
    addpath('/Users/lindaness/Documents/MATLAB/wisdmreproducibility/code/vidimcode')
    testvariancebaseddimLIDAR( testcaseid );
    %fnamedata = '/Users/lindaness/Documents/MATLAB/wisdmreproducibility/datasets/Bridge_87K.txt';
    %fnamescatter = [dirname,sprintf('test%d-data',testcaseid)];
    
    load(fname1,'data','idim');
    %only compute the Multi-Manifold for the points where idim > 0
    indpos = find(idim > 0);
    idim2 = idim(indpos,:);
    data2 = data(indpos,:);
    percentagenoidim = length(find(idim <= 0))/length(idim)
    SVDbound = 400;maxscale = 3;K = 3; varthresh = .95; eps = 10^(-14);
    testproportion = .4; runs = 20;seed = 5; confidencebound = .95;
    figs = 0; 
    [MMbyidimstats, MMsummary,MM,uidim,Runstats ] = MMMethod(data2,idim2,testproportion,runs, seed,eps,SVDbound,maxscale,K,varthresh,confidencebound, figs,fname2 );
end
end

